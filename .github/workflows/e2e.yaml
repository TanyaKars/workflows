name: E2E
on:
  workflow_dispatch:
    inputs:
      testStrategy:
          description: 'Which test strategy to run e2e'
          required: true
          default: 'feature'
          type: choice
          options:
            - main
            - feature
      featureUrl:
        description: 'Feature URL Path (eg: branch-name)'
        default: ''
        required: false
        type: string
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
run-name: 'E2E'
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_SHA: ${{ github.sha }}
  GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
  GITHUB_REPOSITORY: ${{ github.repository }}
  GITHUB_EVENT_NAME: ${{ github.event_name }}
jobs:
  # With the workflow dispatch event, it's needed to call GH API tho check if the PR status is valid for the run
  check-pr-status:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install jq
        run: sudo apt-get install jq
      - name: Check PR status
        id: pr_status
        run: |
          if [[ "$GITHUB_REF_NAME" == "main" ]]; then
            echo "IS_VALID=true" >> $GITHUB_ENV
            echo "Push to main branch is valid"
          else
            echo "Checking PR status for workflow_dispatch event"
            api_url="https://api.github.com/repos/$GITHUB_REPOSITORY/pulls?state=open"
            response=$(curl -s -H "Authorization: token $GITHUB_TOKEN" -H "Accept: application/vnd.github.v3+json" $api_url)
            pr_data=$(echo "$response" | jq -r '.[] | select(.head.sha == "'$GITHUB_SHA'")')
            if [[ -z "$pr_data" ]]; then
              echo "No open pull request found for the commit"
              echo "IS_VALID=false" >> $GITHUB_ENV
            else
              pr_draft=$(echo "$pr_data" | jq -r '.draft')
              if [[ "$pr_draft" == "true" ]]; then
                echo "PR status is draft"
                echo "IS_VALID=false" >> $GITHUB_ENV
              else
                echo "PR is open and ready for review"
                echo "IS_VALID=true" >> $GITHUB_ENV
              fi
            fi
          fi
      - name: Cancel workflow if PR is not valid
        if: env.IS_VALID == 'false'
        run: |
          echo "Cancelling the workflow run"
          gh api \
            --method POST \
            -H "Accept: application/vnd.github.v3+json" \
            /repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/cancel
  on-chore:
    runs-on: ubuntu-latest
    name: Update Branch Status Success
    if: contains(github.ref_name, 'chore/')
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4.1.7
      - name: Make status success
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          RUN_ID: ${{ github.run_id }}
        run: |
          DEPLOY_COMMIT=$(git rev-parse HEAD)
          gh api \
            --method POST \
            -H "Accept: application/vnd.github.v3+json" \
            /repos/$REPO/statuses/$DEPLOY_COMMIT \
            -f state='success' \
            -f target_url="https://github.com/$REPO/actions/runs/$RUN_ID" \
            -f description='Successful' \
            -f context='E2E'
          gh api \
            --method POST \
            -H "Accept: application/vnd.github.v3+json" \
            /repos/$REPO/actions/runs/$RUN_ID/cancel
  on-pending:
    if: github.ref_name == 'main' || contains(github.ref_name, 'feature/') || contains(github.ref_name, 'fix/')
    runs-on: ubuntu-latest
    name: Update Branch Status Pending
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4.1.7
      - name: Make status pending
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          RUN_ID: ${{ github.run_id }}
        run: |
          DEPLOY_COMMIT=$(git rev-parse HEAD)
          gh api \
            --method POST \
            -H "Accept: application/vnd.github.v3+json" \
            /repos/$REPO/statuses/$DEPLOY_COMMIT \
            -f state='pending' \
            -f target_url="https://github.com/$REPO/actions/runs/$RUN_ID" \
            -f description='Pending' \
            -f context='E2E Tests'
  call-check-enviroment:
    name: Use local generate-config
    uses: ./.github/workflows/generate-config.yaml
  e2e-test-1:
    needs: check-pr-status
    if: github.ref_name == 'main' || (contains(github.ref_name, 'feature/') && !contains(github.ref_name, 'feature/test-2')) || (contains(github.ref_name, 'fix/') && !contains(github.ref_name, 'fix/test-2'))
    name: Run E2E test-1
    uses: ./.github/workflows/e2e-test-1.yaml
    secrets: inherit
  e2e-test-2:
    needs: check-pr-status
    if: github.ref_name == 'main'  || (contains(github.ref_name, 'feature/') && !contains(github.ref_name, 'feature/test-1')) || (contains(github.ref_name, 'fix/') && !contains(github.ref_name, 'fix/test-1'))
    name: Run E2E test-2
    uses: ./.github/workflows/e2e-test-2.yaml
    secrets: inherit
  e2e-test-3:
    needs: [check-pr-status, call-check-enviroment]
    if: github.ref_name == 'main' || contains(github.ref_name, 'feature/') || contains(github.ref_name, 'fix/')
    name: Run E2E - test-3
    runs-on: ubuntu-latest
    container: cypress/browsers:node-20.13.1-chrome-125.0.6422.60-1-ff-126.0-edge-125.0.2535.51-1
    strategy:
      fail-fast: false
      matrix:
        containers: [suit-1, suit-2]
    defaults:
      run:
        working-directory: e2e
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7
      - name: create env file
        run: |
          touch .env
          echo URL_PREFIX=${{ inputs.featureUrl }} >> .env
      - name: Print ref_type
        run: |
          echo "The value of REF_TYPE is: ${{ needs.call-check-enviroment.outputs.ref_type }}"
      - name: Cypress run
        uses: cypress-io/github-action@v6.7.0
        with:
          browser: chrome
          working-directory: ./e2e
          spec: cypress/e2e/suit-3/${{ matrix.containers }}.cy.ts
          config-file: cypress.dev-${{ needs.call-check-enviroment.outputs.ref_type }}.config.ts
          env: configFile=dev
      - name: Store screenshot artifacts
        uses: actions/upload-artifact@v4.3.4
        if: failure()
        with:
          name: e2e-screenshots
          path: ./e2e/cypress/results
  on-success:
    runs-on: ubuntu-latest
    name: Update Branch Success
    needs: [e2e-test-1, e2e-test-2, e2e-test-3]
    if: ${{ always() && ((needs.e2e-e2e-test-1.result == 'success' && needs.e2e-e2e-test-3.result == 'success' && needs.e2e-e2e-test-2.result == 'skipped') || (needs.e2e-e2e-test-2.result == 'success' && needs.e2e-e2e-test-3.result == 'success' && needs.e2e-e2e-test-1.result == 'skipped') || (needs.e2e-e2e-test-1.result == 'success' && needs.e2e-e2e-test-2.result == 'success' && needs.e2e-e2e-test-3.result == 'success')) }}
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4.1.7
      - name: Make status success
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          RUN_ID: ${{ github.run_id }}
        run: |
          DEPLOY_COMMIT=$(git rev-parse HEAD)
          gh api \
            --method POST \
            -H "Accept: application/vnd.github.v3+json" \
            /repos/$REPO/statuses/$DEPLOY_COMMIT \
            -f state='success' \
            -f target_url="https://github.com/$REPO/actions/runs/$RUN_ID" \
            -f description='Successful' \
            -f context='E2E Tests'
  on-failure:
    runs-on: ubuntu-latest
    name: Update Branch Failure
    if: failure() || cancelled()
    needs: [e2e-test-1, e2e-test-2, e2e-test-3]
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4.1.7
      - name: Make status failure
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          RUN_ID: ${{ github.run_id }}
        run: |
          DEPLOY_COMMIT=$(git rev-parse HEAD)
          gh api \
            --method POST \
            -H "Accept: application/vnd.github.v3+json" \
            /repos/$REPO/statuses/$DEPLOY_COMMIT \
            -f state='failure' \
            -f target_url="https://github.com/$REPO/actions/runs/$RUN_ID" \
            -f description='Failure' \
            -f context='E2E Tests'
